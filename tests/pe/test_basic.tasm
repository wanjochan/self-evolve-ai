# PE文件结构测试
# 测试生成的PE文件的基本结构是否正确

.section .data
    # 导入函数
    extern GetProcAddress
    extern LoadLibraryA
    extern ExitProcess
    
    # 测试数据
    kernel32_name: db "KERNEL32.DLL", 0
    user32_name: db "USER32.DLL", 0
    msgbox_name: db "MessageBoxA", 0
    msg_title: db "PE Test", 0
    msg_text: db "PE文件结构测试", 0

.section .text
    global _start

_start:
    # 保存栈帧
    push rbp
    mov rbp, rsp
    sub rsp, 32  ; 分配栈空间
    
    # 加载USER32.DLL
    lea rcx, [user32_name]
    call LoadLibraryA
    test rax, rax
    jz .exit_error
    mov rbx, rax  ; 保存DLL句柄
    
    # 获取MessageBoxA地址
    mov rcx, rbx
    lea rdx, [msgbox_name]
    call GetProcAddress
    test rax, rax
    jz .exit_error
    
    # 调用MessageBoxA
    xor rcx, rcx  ; hWnd = NULL
    lea rdx, [msg_text]
    lea r8, [msg_title]
    xor r9d, r9d  ; uType = 0
    call rax
    
    # 测试成功
    xor eax, eax
    jmp .exit
    
.exit_error:
    mov eax, 1
    
.exit:
    call ExitProcess 